{"version":3,"sources":["components/TableHeader/TableHeader.module.scss","containers/App/App.module.scss","components/TableRow/TableRow.module.scss","helpers/apiHelpers.ts","data/tableData.ts","data/statesHash.ts","helpers/tableHelpers.ts","components/TableHeader/index.tsx","components/TableHeader/TableHeader.tsx","components/TableRow/index.tsx","components/TableRow/TableRow.tsx","constants.ts","store/contacts.ts","store/index.ts","containers/Table/Table.tsx","containers/App/index.ts","containers/App/App.tsx","index.tsx","containers/Table/Table.module.scss"],"names":["module","exports","block","header","cell","cellContact","cellDeals","cellTags","validateString","str","test","calculateTotalValue","deals","reduce","total","deal","Number","value","tableData","1","2","3","4","5","statesHash","Alabama","Alaska","American Samoa","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District Of Columbia","Federated States Of Micronesia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Marshall Islands","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Northern Mariana Islands","Ohio","Oklahoma","Oregon","Palau","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virgin Islands","Virginia","Washington","West Virginia","Wisconsin","Wyoming","formatName","name","replace","trim","charAt","toUpperCase","slice","formatValue","formatted","toLocaleString","concat","formatLocation","location","city","state","country","formatTags","tags","join","TableHeader","props","react_default","a","createElement","className","styles","formatTableHeader","TableRow","contact","columns","formattedContact","Object","objectSpread","totalValue","formatContact","map","column","i","key","classnames","defineProperty","src","alt","API_URI","API_TOKEN","CORS_API_HOST","getContactTags","contactId","Promise","resolve","fetch","headers","Api-Token","then","res","json","returnedTags","all","contactTags","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","tagObj","wrap","_context3","prev","next","id","tag","undefined","abrupt","sent","stop","_x3","apply","this","arguments","filter","length","validateTags","catch","err","console","error","initialState","contactsList","isLoading","reducer","combineReducers","contacts","action","type","middleware","applyMiddleware","thunkMiddleware","loggingMiddleware","store","createStore","Table","componentDidMount","_callee","loadContacts","_context","_this","_this$props","headerValues","values","tableHeaders","components_TableRow","react_loader_spinner_default","color","height","width","components_TableHeader","React","Component","connect","dispatch","contactsRes","firstName","lastName","filteredContacts","_ref","_callee2","currentContact","_context2","_ref2","contactDetailRes","contactData","geoCity","geoState","geoCountry2","_x2","_x","App","es","containers_Table_Table","appElement","document","getElementById","ReactDOM","render","containers_App","head","headRow","bodyBlock","loader"],"mappings":"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","file":"static/js/main.bc0b4fe1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TableHeader_block__2yTHY\",\"header\":\"TableHeader_header__4oESd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"App_block__3-beE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TableRow_block__2L2P8\",\"cell\":\"TableRow_cell__1WtNu\",\"cellContact\":\"TableRow_cellContact__3OvX_\",\"cellDeals\":\"TableRow_cellDeals__2dzTV\",\"cellTags\":\"TableRow_cellTags__CJsp_\"};","export const validateString = (str: string) => {\n    const alpha = /^[a-z ]+$/i;\n    return alpha.test(str);\n}\n\nexport const calculateTotalValue = (deals: any[]) => {\n    return deals.reduce((total, deal) => total + Number(deal.value), 0);\n}\n\nexport const validateTags = (tags: string[]) => {\n    return tags.filter((tag) => {\n        return tag && tag.length < 12;\n    })\n}","export const tableData = {\n    headers: {\n        1: 'contact',\n        2: 'totalValue',\n        3: 'location',\n        4: 'deals',\n        5: 'tags',\n    }\n}","export const statesHash = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'American Samoa': 'AS',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District Of Columbia': 'DC',\n    'Federated States Of Micronesia': 'FM',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Guam': 'GU',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Marshall Islands': 'MH',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands': 'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Palau': 'PW',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY'\n}","import { statesHash } from '../data';\n\nexport const formatTableHeader = (value: string) => {\n    const capitalized = value.charAt(0).toUpperCase() + value.slice(1);\n    return capitalized.replace(/([A-Z])/g, ' $1').trim();\n}\n\nexport const formatContact = (contact: Contact) => {\n    return {\n        ...contact,\n        contact: formatName(contact.contact),\n        location: formatLocation(contact.location),\n        tags: formatTags(contact.tags),\n        totalValue: formatValue(contact.totalValue),\n    }\n}\n\nexport const formatName = (name: string) => {\n    const formattedName = name.replace(/([A-Z])/g, ' $1').trim();\n    return formattedName.charAt(0).toUpperCase() + name.slice(1);\n}\n\nexport const formatValue = (value: number) => {\n    const formatted = value.toLocaleString();\n    return `$${formatted}`;\n}\n\nexport const formatLocation = (location: any) => {\n    return (location === null || location.city === '')\n        ? ''\n        : `${location.city}, ${statesHash[location.state]}, ${location.country === 'US'\n        ? 'USA' : location.country}`;\n}\n\nexport const formatTags = (tags: string[]) => {\n    return tags.join(', ');\n}\n\n","import TableHeader from './TableHeader';\nexport default TableHeader;\n","import React from 'react';\nimport { formatTableHeader } from '../../helpers';\n\nimport * as styles from './TableHeader.module.scss'\n\ntype Props = {\n    value: string,\n}\n\nconst TableHeader = (props: Props) => {\n    const { value } = props;\n\n    return (\n        <th className={styles.block}>\n            <h1 className={styles.header}>\n                {formatTableHeader(value)}\n            </h1>\n        </th>\n    );\n}\n\nexport default TableHeader;\n","import TableRow from './TableRow';\nexport default TableRow;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { formatContact } from '../../helpers';\n\nimport * as styles from './TableRow.module.scss';\n\ntype Props = {\n    contact: Contact,\n    columns: string[],\n}\n\nconst TableRow = (props: Props) => {\n    const { contact, columns } = props;\n    const formattedContact = formatContact(contact);\n\n    return (\n        <tr className={styles.block}>\n            {columns.map((column, i) => (\n                <td key={i} className={classnames(\n                    styles.cell,\n                    {[`${styles.cellContact}`] : column === 'contact'},\n                    {[`${styles.cellTotalValue}`] : column === 'totalValue'},\n                    {[`${styles.cellLocation}`] : column === 'location'},\n                    {[`${styles.cellDeals}`] : column === 'deals'},\n                    {[`${styles.cellTags}`] : column === 'tags'},\n                )}>\n                    {column === 'contact'\n                        && <img\n                            src={`https://ui-avatars.com/api/?background=eae0fe&color=202129&name=${formattedContact.contact}`}\n                            alt={formattedContact.contact}\n                            />\n                    }\n                    <h2>\n                        {formattedContact[column]}\n                    </h2>\n                </td>\n            ))}\n        </tr>\n    );\n}\n\nexport default TableRow;\n","const API_URI = 'https://lamppoststudios.api-us1.com/api/3';\nconst API_TOKEN = '0f7e5c9167768f6bb0a6e09e335ce464da7cb5e7008b989f0057266c26342424a4d8d3e5';\nconst CORS_API_HOST = 'https://cors-anywhere.herokuapp.com';\n\nexport {\n    API_URI,\n    API_TOKEN,\n    CORS_API_HOST\n}","import { Dispatch } from 'redux';\nimport { API_TOKEN, API_URI, CORS_API_HOST } from '../constants';\nimport { calculateTotalValue, validateString, validateTags } from '../helpers';\n\n// action types\nconst GET_CONTACTS_FETCH = 'GET_CONTACTS_FETCH';\nconst GET_CONTACTS_SUCCESS = 'GET_CONTACTS_SUCCESS';\nconst GET_CONTACTS_FAILURE = 'GET_CONTACTS_FAILURE';\n\n// action creators\nconst getContactsFetch = () => ({ type: GET_CONTACTS_FETCH });\nconst getContactsSuccess = (contactsList: any) => ({ type: GET_CONTACTS_SUCCESS, contactsList });\nconst getContactsFailure = (error: string) => ({ type: GET_CONTACTS_FAILURE, error });\n\n// thunk\nexport const getContacts = () => (dispatch: Dispatch) => {\n    dispatch(getContactsFetch());\n\n    fetch(`${CORS_API_HOST}/${API_URI}/contacts?include=contactData,contactTags.tag,contactDeals.deal&status=1&limit=50`, {\n        headers: {\n            'Api-Token': API_TOKEN,\n        },\n    })\n        .then(res => res.json())\n        .then((contactsRes: any) => contactsRes.contacts.filter((contact: any) => {\n            return (validateString(contact.firstName) && validateString(contact.lastName))\n        }))\n        .then((filteredContacts) => {\n            Promise.all(filteredContacts.map(async(currentContact: any) => (\n                await fetch(`${CORS_API_HOST}/${API_URI}/contacts/${currentContact.id}`, {\n                    headers: {\n                        'Api-Token': API_TOKEN,\n                    },\n                })\n                .then(res => res.json())\n                .then(async(contactDetailRes: any) => {\n                    const { contact, contactData, deals } = contactDetailRes;\n                    const tags = await getContactTags(contact.id)\n                    const location = contactData\n                    ? {\n                        city: contactData[0].geoCity,\n                        state: contactData[0].geoState,\n                        country: contactData[0].geoCountry2,\n                    }\n                    : null;\n\n                    return (\n                        {\n                            contact: `${contact.firstName} ${contact.lastName}`,\n                            deals: deals.length,\n                            id: contact.id,\n                            location: location,\n                            tags: tags,\n                            totalValue: calculateTotalValue(deals),\n                        }\n                    )\n                }))))\n                .then((res) => {\n                    dispatch(getContactsSuccess(res));\n                })\n            })\n        .catch(err => {\n            dispatch(getContactsFailure(err));\n    });\n};\n\nexport const getContactTags = (contactId:string) => {\n    return new Promise(resolve => {\n        fetch(`${CORS_API_HOST}/${API_URI}/contacts/${contactId}/contactTags`, {\n            headers: {\n                'Api-Token': API_TOKEN,\n            },\n        })\n        .then(res => res.json())\n        .then((returnedTags) => {\n            Promise.all(returnedTags.contactTags.map(async(tagObj: any) => (\n                await fetch(`${CORS_API_HOST}/${API_URI}/tags/${tagObj.id}`, {\n                        headers: {\n                            'Api-Token': API_TOKEN,\n                        },\n                })\n                .then(res => res.json())\n                .then((tag: any) => {\n                    return tag.tag !== undefined ? tag.tag.tag : null;\n                })\n            )))\n            .then((tags: any[]) => {\n                resolve(validateTags(tags));\n            })\n        })\n        .catch(err => {\n            console.error(err);\n        })\n    })\n}\n\n\n// initial state\nconst initialState: Object = {\n    contactsList:[],\n    error: null,\n    isLoading: false,\n}\n\n// reducer\nexport default (state = initialState, action: ContactAction) => {\n    switch(action.type) {\n        case GET_CONTACTS_FETCH:\n            return {\n                ...state,\n                isLoading: true,\n                error: null,\n            };\n        \n        case GET_CONTACTS_SUCCESS:\n            return {\n                ...state,\n                contactsList: action.contactsList,\n                isLoading: false,\n                error: null,\n            };\n\n        case GET_CONTACTS_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.error,\n            };\n\n        default:\n            return state;\n    }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport loggingMiddleware from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport contacts from './contacts';\n\nconst reducer = combineReducers({ contacts });\n\nconst middleware = applyMiddleware(thunkMiddleware, loggingMiddleware);\n\nconst store = createStore(reducer, middleware);\n\nexport default store;\nexport * from './contacts';","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport Loader from 'react-loader-spinner';\n\nimport TableHeader from '../../components/TableHeader';\nimport TableRow from '../../components/TableRow';\n\nimport { getContacts } from '../../store';\nimport { tableData } from '../../data';\n\nimport * as styles from './Table.module.scss'\n\ntype Props = {\n    contacts: Contact[],\n    isLoading: boolean,\n    loadContacts: () => void\n}\n\nclass Table extends React.Component<Props, Object> {\n\n    componentDidMount = async () => {\n        const { loadContacts } = this.props;\n        await loadContacts();\n    }\n\n    get tableHeaders () {\n        const headerValues = Object.values(tableData.headers);\n    \n        return headerValues.map((value, i) => {\n            return <TableHeader key={i} value={value} />\n        });\n    }\n\n    render(): React.ReactNode {\n        const { contacts, isLoading } = this.props;\n        const headerValues = Object.values(tableData.headers);\n\n        return (\n            !isLoading && contacts.length > 0 ? (\n                <table className={styles.block}>\n                    <thead className={styles.head}>\n                        <tr className={styles.headRow}>\n                            {this.tableHeaders}\n                        </tr>\n                    </thead>\n                    <tbody className={styles.bodyBlock}>\n                        {contacts.map((contact) => (\n                            <TableRow key={contact.id} contact={contact} columns={headerValues} />\n                        ))}\n                    </tbody>\n                </table>\n            ) :\n            <div className={styles.loader}>\n                <Loader\n                    type=\"TailSpin\"\n                    color=\"#3c53d8\"\n                    height={60}\n                    width={60}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapState = (state: StoreState) => (\n    {\n        contacts: state.contacts.contactsList,\n        isLoading: state.contacts.isLoading,\n    }\n)\n\nconst mapDispatch = (dispatch: Dispatch) => (\n    {\n        loadContacts() {\n            dispatch<any>(getContacts());\n        }\n    }\n)\n\nexport const disconnectedTable = Table;\nexport default connect(mapState, mapDispatch)(Table);\n\n","import App from './App';\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Table } from '../Table';\nimport store from '../../store';\n\nimport * as styles from './App.module.scss'\n\nclass App extends React.Component<Object, Object> {\n    render(): React.ReactNode {\n        return (\n            <Provider store ={store}>\n                <main className={styles.block}>\n                    <Table />\n                </main>\n            </Provider>\n          );\n    }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nimport './styles/styles.scss';\n\nconst appElement = document.getElementById('ac-contacts') as HTMLElement;\n\nReactDOM.render(<App />, appElement);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Table_block__3t-Ce\",\"head\":\"Table_head__MdU8J\",\"headRow\":\"Table_headRow__3PW03\",\"bodyBlock\":\"Table_bodyBlock__2DlFp\",\"loader\":\"Table_loader__w1mDQ\"};"],"sourceRoot":""}